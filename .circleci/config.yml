version: 2.1

orbs:
  node: circleci/node@6.1.0
  aws-ecr: circleci/aws-ecr@9.3
  aws-cli: circleci/aws-cli@5.1
  aws-sg-white-list-circleci-ip: inokappa/aws-sg-white-list-circleci-ip@0.0.3

commands:
  generate-backend-env:
    description: 'Generate .env File'
    parameters:
      stage:
        type: string
        default: 'DEV'
      env_type:
        type: string
        default: 'dev'
    steps:
      - run:
          name: remove .env file
          command: |
            cd apps/backend
            rm -rf .env
      - run:
          name: generate env variables
          command: |
            cd apps/backend
            echo "NODE_ENV=\"${<< parameters.env_type >>}\"" >> .env
            echo "VERSION=${<< parameters.stage >>_VERSION}" >> .env
            echo "BUILD_MODE=\"swc\"" >> .env
            echo "VERSION=${<< parameters.stage >>_VERSION}" >> .env
            echo "DATABASE_HOST=\"${<< parameters.stage >>_DATABASE_HOST}\"" >> .env
            echo "DATABASE_PORT=\"${<< parameters.stage >>_DATABASE_PORT}\"" >> .env
            echo "DATABASE_USER=\"${<< parameters.stage >>_DATABASE_USER}\"" >> .env
            echo "DATABASE_PASSWORD=\"${<< parameters.stage >>_DATABASE_PASSWORD}\"" >> .env
            echo "DATABASE_DB=\"${<< parameters.stage >>_DATABASE_DB}\"" >> .env

jobs:
  build-and-push-to-ecr:
    docker:
      - image: 'cimg/node:20.17.0'
    resource_class: medium
    steps:
      - run: sh -c env
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - generate-backend-env:
          stage: 'DEV'
          env_type: 'dev'
      - aws-ecr/build_and_push_image:
          auth:
            - aws-cli/setup:
                role_arn: arn:aws:iam::383373959609:user/deploy
          repo: serverless-rostering-app-dev
          tag: latest
          platform: linux/arm64
          region: ap-southeast-1

  deploy-backend-to-dev:
    docker:
      - image: cimg/node:20.17.0
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - node/install-packages
      - run:
          name: Install Serverless
          command: |
            npm install --prefix=$HOME/.local --global serverless@4.2.4
            sls -v
      - run:
          name: install backend dependencies
          command: |
            cd apps/backend
            npm ci
      # - run:
      #     name: build
      #     command: |
      #       cd apps/backend
      #       npm run build:swc
      - run:
          name: deploy
          command: |
            cd apps/backend
            sls deploy --stage dev --verbose

workflows:
  deployment:
    jobs:
      - build-and-push-to-ecr:
          context:
            - common-database-secret
          filters:
            branches:
              only:
                - master
                - cicd-setup
      - deploy-backend-to-dev:
          context:
            - serverless-deploy-secret
            - common-database-secret
          filters:
            branches:
              only:
                - master
                - cicd-setup
          requires:
            - build-adn-push-to-ecr
