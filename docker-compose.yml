services:
  postgres:
    image: postgres:16.4-alpine3.20
    ports:
      - '5433:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: rostering_app_db
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d rostering_app_db']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.local
      target: final
    env_file:
      - ./apps/backend/.env
    network_mode: host
    depends_on:
      db-migration-service:
        condition: service_completed_successfully

  db-migration-service:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.local
      target: db-migrate
    env_file:
      - ./apps/backend/.env
    network_mode: host
